version: "3.11"
services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./han_cycle:/app
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - KMA_API_KEY=${KMA_API_KEY}
      - TZ=Asia/Seoul
    depends_on:
      - db
      - elasticsearch
    networks:
      - my_network

  test:
    build:
      context: .
      args:
        - DEV=true
    volumes:
      - ./han_cycle:/app
    command: sh -c "python manage.py migrate && python manage.py test"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db
      - elasticsearch
    networks:
      - my_network

  db:
    image: postgres:15.7
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - my_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false  # Disable security
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - my_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - my_network

volumes:
  postgres_data:
  es_data:

networks:
  my_network:
    driver: bridge
