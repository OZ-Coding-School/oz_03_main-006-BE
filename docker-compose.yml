# docker-compose.yml
version: "3.11"
services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./han_cycle:/app
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_STORAGE_BUCKET_NAME=${AWS_STORAGE_BUCKET_NAME}
      - AWS_S3_REGION_NAME=${AWS_S3_REGION_NAME}
      - KMA_API_KEY=${KMA_API_KEY}
      - TZ=Asia/Seoul
    depends_on:
      - db
      - elasticsearch
    networks:
      - my_network

  test:
    build:
      context: .
      args:
        - DEV=true
    volumes:
      - ./han_cycle:/app
    command: sh -c "python manage.py migrate && python manage.py test"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db
      - elasticsearch
    networks:
      - my_network

  # (other services like cron, db, elasticsearch, kibana)

volumes:
  postgres_data:
  es_data:

networks:
  my_network:
    driver: bridge
